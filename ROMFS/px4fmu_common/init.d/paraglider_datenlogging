#!nsh
#
# Paraglider
# Startup Skript für ein Datenlogging mit Xsens Einheit
# und relativer Winkelmessung
# Eingangsdaten werden über den RC Empfänger aufgezeichnet
# und die Fernbedienung mit der Modelwahl PARATEST betrieben
# 
 
#
# Benutzerdefinierter Modus, damit nur die im Startup Skript definierten
# Applikationen starten
#
set MODE custom

#
# Starten des Terminals
#
if sercon
then
	echo "USB connected"
fi
 
#
# Starten des uORB's
#
uorb start
usleep 5000
 
#
# Die konfigurierten Parameter welche sich auf der microSD Karte
# befinden laden
#
#if ramtron start
#then
#	param select /ramtron/params
#	if [ -f /ramtron/params ]
#	then
#		param load /ramtron/params
#	fi
#else
	param select /fs/microsd/params
	if [ -f /fs/microsd/params ]
	then
		if param load /fs/microsd/params
		then
			echo "Parameters loaded"
		else
			echo "Parameter file corrupt - ignoring"
		fi
	fi
#fi

#
# Eine USB Konsole laden
#
nshterm /dev/ttyACM0 &
usleep 5000
 
#
# Den Shell am Schluss des Skripts nicht automatisch wieder schliessen
#
set EXIT_ON_END no
 
#
# Starten des für die Kommunikation zur Bodenstation MAVLink 
# Auf dem UART2 / ttyS1 mit Baudrate 57600)
#
mavlink start -d /dev/ttyS1 -b 57600
usleep 5000

#
# Den commander starten
#
commander start
usleep 5000

#
# Das PX4IO Interface starten und konfigurieren
#
sh /etc/init.d/rc.io
usleep 5000
 
#
# Die Sensoren starten und testen
#
sh /etc/init.d/rc.sensors
usleep 5000

#
# Die Xsens Einheit starten
#
xsens start
usleep 5000

#
# Starten des Positionsschätzer
# Dies ist eine implementierung des Kalman Filters auf dem PX4 Board
# und funktioniert nur wenn die Xsens Einheit angeschlossen ist
#
att_pos_estimator_ekf start
usleep 5000

#
# Den MAX127 Analog-Digital-Wandler für die relative Winkelmessung 
# zwischen Paraglider und Flugroboter starten
#
max127 start
usleep 5000
 
#
# Starten des Datenloggings mit 100 Hz und einer Buffergrösse von 16 KBytes
#
sdlog2 start -r 100 -b 16 -e

if [ $EXIT_ON_END == yes ]
then
	exit
fi